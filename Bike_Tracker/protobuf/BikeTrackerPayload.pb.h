/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.1 */

#ifndef PB_PROTO_FILES_BIKETRACKERPAYLOAD_PB_H_INCLUDED
#define PB_PROTO_FILES_BIKETRACKERPAYLOAD_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _GpsPayload {
    float latitude;
    float longitude;
    int64_t epoch;
    int32_t battery;
    bool has_speed_kph;
    float speed_kph;
    bool has_heading;
    float heading;
    bool has_altitude;
    float altitude;
} GpsPayload;


/* Initializer values for message structs */
#define GpsPayload_init_default                  {0, 0, 0, 0, false, 0, false, 0, false, 0}
#define GpsPayload_init_zero                     {0, 0, 0, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define GpsPayload_latitude_tag                  1
#define GpsPayload_longitude_tag                 2
#define GpsPayload_epoch_tag                     3
#define GpsPayload_battery_tag                   4
#define GpsPayload_speed_kph_tag                 5
#define GpsPayload_heading_tag                   6
#define GpsPayload_altitude_tag                  7

/* Struct field encoding specification for nanopb */
#define GpsPayload_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FLOAT,    latitude,          1) \
X(a, STATIC,   REQUIRED, FLOAT,    longitude,         2) \
X(a, STATIC,   REQUIRED, INT64,    epoch,             3) \
X(a, STATIC,   REQUIRED, INT32,    battery,           4) \
X(a, STATIC,   OPTIONAL, FLOAT,    speed_kph,         5) \
X(a, STATIC,   OPTIONAL, FLOAT,    heading,           6) \
X(a, STATIC,   OPTIONAL, FLOAT,    altitude,          7)
#define GpsPayload_CALLBACK NULL
#define GpsPayload_DEFAULT NULL

extern const pb_msgdesc_t GpsPayload_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define GpsPayload_fields &GpsPayload_msg

/* Maximum encoded size of messages (where known) */
#define GpsPayload_size                          47

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
